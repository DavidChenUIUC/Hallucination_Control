  0%|                                                                                                          | 0/9210 [00:00<?, ?it/s]You're using a T5TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/home/cwtang/.local/lib/python3.10/site-packages/bitsandbytes/autograd/_functions.py:322: UserWarning: MatMul8bitLt: inputs will be cast from torch.float32 to float16 during quantization
  warnings.warn(f"MatMul8bitLt: inputs will be cast from {A.dtype} to float16 during quantization")









  0%|                                                                                               | 10/9210 [00:40<9:51:18,  3.86s/it]










  0%|▏                                                                                              | 20/9210 [01:18<9:48:35,  3.84s/it]










  0%|▎                                                                                              | 30/9210 [01:57<9:50:17,  3.86s/it]










  0%|▍                                                                                              | 40/9210 [02:35<9:51:41,  3.87s/it]

  0%|▍                                                                                              | 41/9210 [02:39<9:50:34,  3.86s/it]Traceback (most recent call last):
  File "/home/cwtang/david_dynamo/flan_t5.py", line 153, in <module>
    trainer.train()
  File "/home/cwtang/.local/lib/python3.10/site-packages/transformers/trainer.py", line 1537, in train
    return inner_training_loop(
  File "/home/cwtang/.local/lib/python3.10/site-packages/accelerate/utils/memory.py", line 136, in decorator
    return function(batch_size, *args, **kwargs)
  File "/home/cwtang/.local/lib/python3.10/site-packages/transformers/trainer.py", line 1854, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/cwtang/.local/lib/python3.10/site-packages/transformers/trainer.py", line 2744, in training_step
    self.accelerator.backward(loss)
  File "/home/cwtang/.local/lib/python3.10/site-packages/accelerate/accelerator.py", line 1905, in backward
    loss.backward(**kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/usr/local/lib/python3.10/dist-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt